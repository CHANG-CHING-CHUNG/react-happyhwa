{"version":3,"sources":["images/logo/黑皮驊ＬＯＧＯ.svg","images/dishes/魯肉飯1.jpg","images/dishes/控肉飯.jpg","images/dishes/旗魚鬆飯.jpg","images/news/coffee-cup.jpg","components/header/header.js","components/icons/icon.js","components/news/news.js","containers/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","className","src","logo","alt","href","Icon","braisedPorkRice","soyStewedPorkRice","marlinFlossRice","News","coffee","Main","App","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,wE,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,2OC+B5BC,MA1Bf,WACE,OACE,4BAAQC,GAAG,UACT,yBAAKA,GAAG,SAASC,UAAU,iBACzB,yBAAKC,IAAKC,IAAMC,IAAI,KACpB,6BACE,4BACE,4BAAI,uBAAGC,KAAK,SAAR,iBACJ,4BAAI,uBAAGA,KAAK,UAAR,uBACJ,4BAAI,uBAAGA,KAAK,SAAR,6BACJ,4BAAI,uBAAGA,KAAK,SAAR,iBACJ,4BAAI,uBAAGA,KAAK,aAAR,oBAKV,yBAAKJ,UAAU,iBACb,yBAAKA,UAAU,yBACb,0EACA,yF,wDCaKK,MA/Bf,WACE,OACE,6BAASN,GAAG,QAAQC,UAAU,kBAC5B,yBAAKA,UAAU,cACb,6BACE,yBAAKC,IAAKK,IAAiBH,IAAI,KAC/B,6BACE,8DACA,gHAGJ,6BACE,yBAAKF,IAAKM,IAAmBJ,IAAI,KACjC,6BACE,8DACA,gHAGJ,6BACE,yBAAKF,IAAKO,IAAiBL,IAAI,KAC/B,6BACE,oEACA,mH,sBCAGM,MAxBf,WACE,OACE,6BAASV,GAAG,OAAOC,UAAU,qBAC3B,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,YACb,yBAAKC,IAAKS,IAAQP,IAAI,OAG1B,yBAAKH,UAAU,UACb,yBAAKA,UAAU,YACb,wDACA,4BACE,0EACA,0EACA,gFCNCW,MATf,WACE,OACE,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCQSC,E,uKATX,OACI,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANQC,IAAMC,WCQJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.161644eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/黑皮驊ＬＯＧＯ.71d0bea8.svg\";","module.exports = __webpack_public_path__ + \"static/media/魯肉飯1.0085066f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/控肉飯.e926d6fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/旗魚鬆飯.358157b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffee-cup.2272cc90.jpg\";","import React from 'react';\r\nimport logo from '../../images/logo/黑皮驊ＬＯＧＯ.svg'\r\nimport \"./header.css\";\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <header id=\"header\">\r\n      <div id=\"navbar\" className=\"header-navbar\">\r\n        <img src={logo} alt=\"\"/>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"#home\">首頁</a></li>\r\n            <li><a href=\"#icons\">招牌菜</a></li>\r\n            <li><a href=\"#news\">最新消息</a></li>\r\n            <li><a href=\"#menu\">菜單</a></li>\r\n            <li><a href=\"#delivery\">外送</a></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n\r\n      <div className=\"header-banner\">\r\n        <div className=\"header-banner-content\">\r\n          <h1>色、香、味具全</h1>\r\n          <p>前所未有的美食饗宴</p>\r\n        </div> \r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './icon.css';\r\nimport braisedPorkRice from '../../images/dishes/魯肉飯1.jpg';\r\nimport soyStewedPorkRice from '../../images/dishes/控肉飯.jpg';\r\nimport marlinFlossRice from '../../images/dishes/旗魚鬆飯.jpg';\r\n\r\nfunction Icon() {\r\n  return (\r\n    <section id=\"icons\" className=\"icons bg-light\">\r\n      <div className=\"flex-items\">\r\n        <div>\r\n          <img src={braisedPorkRice} alt=\"\"/>\r\n          <div>\r\n            <h3>招牌魯肉飯</h3>\r\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Doloremque, corporis.</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <img src={soyStewedPorkRice} alt=\"\"/>\r\n          <div>\r\n            <h3>招牌控肉飯</h3>\r\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Doloremque, corporis.</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <img src={marlinFlossRice} alt=\"\"/>\r\n          <div>\r\n            <h3>招牌旗魚鬆飯</h3>\r\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Doloremque, corporis.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport coffee from '../../images/news/coffee-cup.jpg'\r\nimport './news.css';\r\n\r\nfunction News() {\r\n  return (\r\n    <section id=\"news\" className=\"news flex-columns\">\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n          <div className=\"column-1\">\r\n            <img src={coffee} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"column\">\r\n          <div className=\"column-2\">\r\n            <h2>最新消息</h2>\r\n            <ul>\r\n              <li>外送優惠實施中</li>\r\n              <li>外送優惠實施中</li>\r\n              <li>外送優惠實施中</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default News;","import React from 'react'\r\nimport Icon from '../components/icons/icon';\r\nimport News from '../components/news/news';\r\n\r\nfunction Main() {\r\n  return (\r\n    <main>\r\n      <Icon/>\r\n      <News/>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Header from './components/header/header';\nimport Main from './containers/main';\n\nclass App extends React.Component {\n\n  render() {\n    return  (\n        <div>\n          <Header/>\n          <Main/>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('home')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}